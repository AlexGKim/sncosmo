language: python

python:
    - 2.6
    - 2.7
    #- 3.3
    #- 3.4
    # This is just for "egg_info".  All other builds are explicitly given in the matrix
env:
    global:
        # The following versions are the 'default' for tests, unless
        # overidden underneath. They are defined here in order to save having
        # to repeat them for all configurations.
        - NUMPY_VERSION=1.9
        - ASTROPY_VERSION=stable
        - CONDA_INSTALL='conda install -c astropy-ci-extras --yes'
        - PIP_INSTALL='pip install'
    matrix:
        - SETUP_CMD='egg_info'

matrix:
    include:

        # Do a coverage test in Python 2. 
        - python: 2.7
          env: SETUP_CMD='test --coverage'

        # Try Astropy development version
        - python: 2.7
          env: ASTROPY_VERSION=development SETUP_CMD='test'
        # - python: 3.3
        #   env: ASTROPY_VERSION=development SETUP_CMD='test'

        # Try all python versions with the latest numpy
        - python: 2.6
          env: SETUP_CMD='test'
        - python: 2.7
          env: SETUP_CMD='test'
        # - python: 3.2
        #   env: SETUP_CMD='test'
        # - python: 3.3
        #   env: SETUP_CMD='test'
        # - python: 3.4
        #   env: SETUP_CMD='test'

        # Try older numpy versions
        - python: 2.7
          env: NUMPY_VERSION=1.8 SETUP_CMD='test'
        - python: 2.7
          env: NUMPY_VERSION=1.7 SETUP_CMD='test'
        - python: 2.7
          env: NUMPY_VERSION=1.6 SETUP_CMD='test'

before_install:

    # need a C++ compiler for iminuit
    - sudo apt-get install g++ -y

    # Use utf8 encoding. Should be default, but this is insurance against
    # future changes
    - export PYTHONIOENCODING=UTF8
    - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
    - chmod +x miniconda.sh
    - ./miniconda.sh -b
    - export PATH=/home/travis/miniconda/bin:$PATH
    - conda update --yes conda

    # Make sure that interactive matplotlib backends work
    - export DISPLAY=:99.0
    - sh -e /etc/init.d/xvfb start

install:

    # CONDA
    - conda create --yes -n test -c astropy-ci-extras python=$TRAVIS_PYTHON_VERSION
    - source activate test

    # CORE DEPENDENCIES
    - if [[ $SETUP_CMD != egg_info ]]; then $CONDA_INSTALL numpy=$NUMPY_VERSION pytest pip Cython jinja2; fi
    - if [[ $SETUP_CMD != egg_info ]]; then $PIP_INSTALL pytest-xdist; fi

    # ASTROPY
    - if [[ $SETUP_CMD != egg_info ]] && [[ $ASTROPY_VERSION == development ]]; then $PIP_INSTALL git+http://github.com/astropy/astropy.git#egg=astropy; fi
    - if [[ $SETUP_CMD != egg_info ]] && [[ $ASTROPY_VERSION == stable ]]; then $CONDA_INSTALL numpy=$NUMPY_VERSION astropy; fi

    # SNCOSMO REQUIRED AND OPTIONAL DEPENDENCIES
    # Leave the `numpy=$NUMPY_VERSION` in the `conda`
    # install since this ensures Numpy does not get automatically upgraded.
    - if [[ $SETUP_CMD != egg_info ]]; then $CONDA_INSTALL numpy=$NUMPY_VERSION scipy matplotlib; fi
    - if [[ $SETUP_CMD != egg_info ]]; then $PIP_INSTALL iminuit; fi

    # This is a special hack to work around a broken conda dependency!
    # conda thinks matplotlib 1.2.1 needs shiboken 1.2, but it needs 1.1.
    - if [[ $NUMPY_VERSION == 1.5 ]]; then $CONDA_INSTALL shiboken=1.1; fi

    # PEP8 / COVERAGE DEPENDENCIES
    - if [[ $SETUP_CMD != egg_info ]]; then $CONDA_INSTALL pep8; fi
    - if [[ $SETUP_CMD == 'test --coverage' ]]; then $PIP_INSTALL coverage coveralls; fi

script:
   - python setup.py $SETUP_CMD
   - if [[ $SETUP_CMD == 'test --coverage' ]]; then pep8 sncosmo --exclude=version.py; fi

after_success:
   - if [[ $SETUP_CMD == 'test --coverage' ]]; then coveralls --rcfile='sncosmo/tests/coveragerc'; fi
